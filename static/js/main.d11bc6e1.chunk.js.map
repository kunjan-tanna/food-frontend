{"version":3,"sources":["history.js","navbar/menu.js","views/pages/UserDashboard/Home.js","Routes.js","App.js","redux/reducers/global/global.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js"],"names":["history","createHashHistory","Menu","className","to","exact","activeStyle","color","Component","connect","state","withRouter","Home","props","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocation","alert","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","postion","console","log","componentDidMount","latitute","longtitute","Row","Col","sm","md","size","offset","style","paddingTop","InputGroup","Input","type","id","placeholder","InputGroupAddon","addonType","InputGroupText","React","Routes","this","path","component","App","initialState","isSuccess","trackerData","global","action","Object","assign","payload","persistConfig","key","storage","whitelist","rootReducer","combineReducers","globalReducer","persistReducer","middlewares","thunk","createDebounce","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"gRACWA,EAAUC,c,gBCGfC,E,uKAEA,OACG,6BACG,wBAAIC,UAAU,wBACX,wBAAIA,UAAU,YACX,kBAAC,IAAD,CACGC,GAAG,IACHC,OAAK,EACLF,UAAU,WACVG,YAAa,CAAEC,MAAO,QAJzB,oB,GANCC,aAwBJC,eAHS,SAACC,GACtB,MAAO,KAEKD,CAAyBE,YAAWT,I,wDCZ7CU,E,kDACH,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IAOTC,YAAc,WACPC,UAAUC,YACXD,UAAUC,YAAYC,mBACnB,EAAKC,eACL,EAAKC,gBAGRC,MAAM,OAfO,EAkBnBD,eAAiB,SAACE,GACf,OAAQA,EAAMC,MACX,KAAKD,EAAME,kBACRH,MAAM,4CACN,MACH,KAAKC,EAAMG,qBACRJ,MAAM,wCACN,MACH,KAAKC,EAAMI,QACRL,MAAM,+CACN,MACH,KAAKC,EAAMK,cACRN,MAAM,gCA9BI,EAmCnBF,eAAiB,SAACS,GACfC,QAAQC,IAAIF,IApCI,EAuCnBG,kBAAoB,aArCjB,EAAKpB,MAAQ,CACVqB,SAAU,KACVC,WAAY,MAJC,E,qDAkDhB,OACG,kBAACC,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,MAAO,CAAEC,WAAY,KAC3D,kBAACC,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CACGC,KAAK,OACLC,GAAG,UACHC,YAAY,mBAGf,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UACxB,kBAACC,EAAA,EAAD,KACG,kBAAC,IAAD,CAAQX,KAAK,gB,GA/DlBY,IAAMzC,WA4EVC,eAJS,SAACC,GACtB,MAAO,KAGKD,CAAyBG,GClFlCsC,E,uKAGA,OADAtB,QAAQC,IAAI,SAAUsB,KAAKtC,OAExB,6BACG,kBAAC,IAAD,CAAQb,QAASA,GACd,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEG,kBAAC,IAAD,CAAOK,OAAK,EAAC+C,KAAK,IAAIC,UAAWzC,KAEpC,4BAAQT,UAAU,uBACf,yBAAKA,UAAU,aACZ,0BAAMA,UAAU,cAAhB,oD,GAbAK,aA0BNC,eAHS,SAACC,GACtB,MAAO,KAEKD,CAAyByC,GC7BzBI,MAJf,WACG,OAAO,kBAAC,EAAD,O,yDCJGC,EAAe,CACzBC,WAAW,EACXC,YAAa,IAuBDC,EAnBA,WAAmC,IAAlChD,EAAiC,uDAAzB6C,EAAcI,EAAW,uCAC9C,OAAQA,EAAOhB,MACZ,IAAK,UACF,OAAO,2BACDjC,GADN,IAEG8C,WAAW,IAEjB,IAAK,OACF,OAAO,2BACD9C,GADN,IAEG8C,WAAW,IAEjB,IAAK,eACF,OAAOI,OAAOC,OAAO,GAAInD,EAAO,CAAE+C,YAAaE,EAAOG,UAEzD,QACG,OAAOpD,I,QCjBVqD,EAAgB,CACnBC,IAAK,MACLC,Q,OAAAA,EACAC,UAAW,CAAC,SAGTC,EAAcC,YAAgB,CACjCC,cAAeA,IAEHC,cAAeP,EAAeI,GCRvCI,EAAc,CAACC,IAAOC,OAEtBC,EAAmBC,OAAOC,sCAAwCC,IAEpEC,EAAQC,YACTZ,EACA,GACAO,EAAiBM,IAAe,WAAf,EAAmBT,KAEjCU,EAAYC,YAAaJ,G,QCL/BK,IAASC,OACN,kBAAC,IAAD,CAAUN,MAAOA,GACd,kBAAC,IAAD,CAAaG,UAAWA,GACrB,kBAAC,IAAD,KACG,kBAAC,EAAD,SAKTI,SAASC,eAAe,W","file":"static/js/main.d11bc6e1.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\nexport let history = createHashHistory();\n\n// import { createBrowserHistory } from \"history\";\n// export let history = createBrowserHistory();\n","import React, { Component, Fragment } from \"react\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Menu extends Component {\n   render() {\n      return (\n         <div>\n            <ul className=\"nav nav-tabs bg-blue\">\n               <li className=\"nav-item\">\n                  <NavLink\n                     to=\"/\"\n                     exact\n                     className=\"nav-link\"\n                     activeStyle={{ color: \"red\" }}\n                     //style={currentTab(history, \"/\")}\n                  >\n                     Dashboard\n                  </NavLink>\n               </li>\n            </ul>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = (state) => {\n   return {};\n};\nexport default connect(mapStateToProps)(withRouter(Menu));\n","import React from \"react\";\nimport {\n   CardBody,\n   CardHeader,\n   Card,\n   Button,\n   Row,\n   Col,\n   Input,\n   InputGroup,\n   InputGroupAddon,\n   InputGroupText,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Star, Edit, Trash2, Search, MapPin } from \"react-feather\";\n\nclass Home extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         latitute: null,\n         longtitute: null,\n      };\n      // console.log(\"UserData\", this.props);\n   }\n   getLocation = () => {\n      if (navigator.geolocation) {\n         navigator.geolocation.getCurrentPosition(\n            this.getCoordinates,\n            this.handleLocation\n         );\n      } else {\n         alert(\"hi\");\n      }\n   };\n   handleLocation = (error) => {\n      switch (error.code) {\n         case error.PERMISSION_DENIED:\n            alert(\"User denied the request for Geolocation.\");\n            break;\n         case error.POSITION_UNAVAILABLE:\n            alert(\"Location information is unavailable.\");\n            break;\n         case error.TIMEOUT:\n            alert(\"The request to get user location timed out.\");\n            break;\n         case error.UNKNOWN_ERROR:\n            alert(\"An unknown error occurred.\");\n            break;\n         default:\n      }\n   };\n   getCoordinates = (postion) => {\n      console.log(postion);\n   };\n\n   componentDidMount = () => {\n      //this.getLocation();\n      // console.log(\"ComponentDidMount\");\n      // this.props.dispatch(trackerAction.getData()).then((res) => {\n      //    console.log(\"Tracker Data\", res);\n      //    if (res) {\n      //       this.setState({ formData: res }); //() => {console.log();}\n      //    }\n      // });\n   };\n   render() {\n      return (\n         <Row>\n            <Col sm=\"12\" md={{ size: 4, offset: 4 }} style={{ paddingTop: 50 }}>\n               <InputGroup>\n                  <Input\n                     type=\"text\"\n                     id=\"banquet\"\n                     placeholder=\"Search Banquet\"\n                     //onChange={this.handleDiscount}\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                     <InputGroupText>\n                        <MapPin size=\"15\" />\n                     </InputGroupText>\n                  </InputGroupAddon>\n               </InputGroup>\n            </Col>\n         </Row>\n      );\n   }\n}\nconst mapStateToProps = (state) => {\n   return {};\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { history } from \"./history\";\nimport Menu from \"./navbar/menu\";\nimport \"../src/index.css\";\nimport { connect } from \"react-redux\";\n\n//Home Dashboard\nimport Home from \"./views/pages/UserDashboard/Home\";\n\nclass Routes extends Component {\n   render() {\n      console.log(\"Routes\", this.props);\n      return (\n         <div>\n            <Router history={history}>\n               <Menu />\n               <Switch>\n                  {/* For Dashboard */}\n                  <Route exact path=\"/\" component={Home} />\n               </Switch>\n               <footer className=\"footer bg-dark py-2\">\n                  <div className=\"container\">\n                     <span className=\"text-white\">\n                        &copy; Copyright 2020 Food Ordering System\n                     </span>\n                  </div>\n               </footer>\n            </Router>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = (state) => {\n   return {};\n};\nexport default connect(mapStateToProps)(Routes);\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n   return <Routes />;\n}\n\nexport default App;\n","export const initialState = {\n   isSuccess: false,\n   trackerData: [],\n};\n\n//To Store the Actions\nconst global = (state = initialState, action) => {\n   switch (action.type) {\n      case \"SUCCESS\":\n         return {\n            ...state,\n            isSuccess: true,\n         };\n      case \"FAIL\":\n         return {\n            ...state,\n            isSuccess: false,\n         };\n      case \"TRACKER_DATA\":\n         return Object.assign({}, state, { trackerData: action.payload });\n\n      default:\n         return state;\n   }\n};\nexport default global;\n","import globalReducer from \"./global/global\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\n\nconst persistConfig = {\n   key: \"jwt\",\n   storage,\n   whitelist: [\"auth\"],\n};\n\nconst rootReducer = combineReducers({\n   globalReducer: globalReducer,\n});\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createDebounce from \"redux-debounced\";\nimport thunk from \"redux-thunk\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst middlewares = [thunk, createDebounce()];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(\n   rootReducer,\n   {},\n   composeEnhancers(applyMiddleware(...middlewares))\n);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/storeConfig/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <PersistGate persistor={persistor}>\n         <HashRouter>\n            <App />\n         </HashRouter>\n      </PersistGate>\n   </Provider>,\n\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
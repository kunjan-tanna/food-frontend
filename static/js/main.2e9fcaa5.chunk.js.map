{"version":3,"sources":["history.js","navbar/menu.js","configs/axiosConfig.js","configs/imgConfig.js","views/Components/UserDashboard/Home.js","redux/actions/global.js","views/Components/Menu.js","Routes.js","App.js","redux/reducers/global/global.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js"],"names":["history","createHashHistory","Menu","className","to","exact","activeStyle","color","Component","connect","state","withRouter","require","config","axiosInstance","axios","create","baseURL","process","API_URL","REACT_APP_PUBLIC_PATH","Home","props","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocation","alert","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","position","lng","lat","coords","latitude","longitude","dispatch","a","get","res","then","data","setState","updateSearchQuery","val","searchVal","componentDidMount","type","payload","rowData","longtitude","filteredData","this","map","item","banquetId","filter","banName","toLowerCase","indexOf","Row","Col","sm","Card","CardBody","md","size","offset","style","paddingTop","InputGroup","Input","id","placeholder","onChange","e","target","value","InputGroupAddon","addonType","InputGroupText","length","index","lg","key","body","outline","borderColor","cursor","onClick","push","pathname","_id","CardHeader","CardTitle","CardText","CardLink","href","locationLink","CardImg","variant","src","IMG","avtar","capacity","location","mobile","React","Routes","path","component","Menus","App","initialState","banquets","global","action","Object","assign","persistConfig","storage","whitelist","rootReducer","combineReducers","globalReducer","persistReducer","middlewares","thunk","createDebounce","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e9fcaa5.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\nexport let history = createHashHistory();\n","import React, { Component, Fragment } from \"react\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Menu extends Component {\n   render() {\n      return (\n         <div>\n            <ul className=\"nav nav-tabs bg-blue\">\n               <li className=\"nav-item\">\n                  <NavLink\n                     to=\"/\"\n                     exact\n                     className=\"nav-link\"\n                     activeStyle={{ color: \"red\" }}\n                  >\n                     Dashboard\n                  </NavLink>\n               </li>\n\n            </ul>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = (state) => {\n   return {};\n};\nexport default connect(mapStateToProps)(withRouter(Menu));\n","import axios from \"axios\";\nrequire(\"dotenv\").config();\n\nconst axiosInstance = axios.create({\n   baseURL:\n      process.env.API_URL || \"https://arcane-eyrie-87352.herokuapp.com/api/\",\n});\n\nexport default axiosInstance;\n","require(\"dotenv\").config();\n\nconst axiosInstance = {\n   baseURL:\n      process.env.REACT_APP_PUBLIC_PATH ||\n      \"https://arcane-eyrie-87352.herokuapp.com/upload/\",\n};\n\nexport default axiosInstance;\n","import React from \"react\";\nimport {\n   CardBody,\n   CardHeader,\n   Card,\n   Button,\n   Row,\n   Col,\n   CardText,\n   Input,\n   CardLink,\n   CardImg,\n   Nav,\n   NavItem,\n   NavLink,\n   CardTitle,\n   InputGroup,\n   InputGroupAddon,\n   InputGroupText,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { history } from \"../../../history\";\nimport * as globalActions from \"../../../redux/actions/global\";\nimport IMG from \"../../../configs/imgConfig\";\nimport { MapPin } from \"react-feather\";\n\nclass Home extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         data: [],\n         latitude: \"\",\n         searchVal: \"\",\n         longtitude: \"\",\n         rowData: [],\n      };\n   }\n   /*To get Current Location*/\n   getLocation = () => {\n      if (navigator.geolocation) {\n         navigator.geolocation.getCurrentPosition(\n            this.getCoordinates,\n            this.handleLocation\n         );\n      } else {\n         alert(\"hi\");\n      }\n   };\n   /*Handle the location error*/\n   handleLocation = (error) => {\n      switch (error.code) {\n         case error.PERMISSION_DENIED:\n            alert(\"User denied the request for Geolocation.\");\n            break;\n         case error.POSITION_UNAVAILABLE:\n            alert(\"Location information is unavailable.\");\n            break;\n         case error.TIMEOUT:\n            alert(\"The request to get user location timed out.\");\n            break;\n         case error.UNKNOWN_ERROR:\n            alert(\"An unknown error occurred.\");\n            break;\n         default:\n      }\n   };\n   /*To get current latitude & longtitude*/\n   getCoordinates = (position) => {\n      //70.4645757, 21.5134252\n      const data = position.coords.latitude;\n      const abc = position.coords.longitude;\n\n      this.props\n         .dispatch(globalActions.getNearBanquet(70.4645757, 21.5134252))\n         .then((res) => {\n            let data = res.data;\n            this.setState({ data });\n         });\n   };\n\n   /*For Searching Value*/\n   updateSearchQuery = (val) => {\n      this.setState({\n         searchVal: val,\n      });\n   };\n   /*On load screen to show nearBy location*/\n   componentDidMount = () => {\n      this.props.dispatch(globalActions.getBanquet()).then((res) => {\n         let rowData = res.data;\n         this.setState({ rowData });\n      });\n      this.getLocation();\n   };\n\n   render() {\n      const final =\n         this.state.data &&\n         this.state.data.map((item) => {\n            return item.banquetId;\n         });\n      let filteredData = final.filter((data) => {\n         return (\n            data.banName\n               .toLowerCase()\n               .indexOf(this.state.searchVal.toLowerCase()) !== -1\n         );\n      });\n      return (\n         <Row>\n            <Col sm=\"12\">\n               <Card className=\"pt-1\">\n                  <CardBody>\n                     <Col sm=\"12\">\n                        <Col\n                           sm=\"12\"\n                           md={{ size: 4, offset: 4 }}\n                           style={{ paddingTop: 20 }}\n                        >\n                           <InputGroup>\n                              <Input\n                                 type=\"text\"\n                                 id=\"banquet\"\n                                 placeholder=\"Search Banquet\"\n                                 onChange={(e) =>\n                                    this.updateSearchQuery(e.target.value)\n                                 }\n                                 value={this.state.value}\n                              />\n                              <InputGroupAddon addonType=\"append\">\n                                 <InputGroupText>\n                                    <MapPin size=\"15\" />\n                                 </InputGroupText>\n                              </InputGroupAddon>\n                           </InputGroup>\n                        </Col>\n                        <Row className=\"pt-4\">\n                           {filteredData && filteredData.length > 0\n                              ? filteredData.map((item, index) => {\n                                 return (\n                                    <Col lg=\"4\" sm=\"12\" key={index}>\n                                       <Card\n                                          body\n                                          outline\n                                          style={{\n                                             borderColor: \"#333\",\n                                             cursor: \"pointer\"\n                                          }}\n                                          className=\"mt-4\"\n                                          onClick={() =>\n                                             history.push({\n                                                pathname: \"/menu\",\n                                                state: { banquetId: item ? item._id : \"\" },\n                                             })\n                                          }\n                                       >\n                                          <CardHeader className=\"justify-content-between\">\n                                             <div className=\"card-heading\">\n                                                <CardTitle>\n                                                   <h6>\n                                                      <strong>\n                                                         {item.banName}\n                                                      </strong>\n                                                   </h6>\n                                                </CardTitle>\n                                                <CardText>\n                                                   <CardLink\n                                                      href={item.locationLink}\n                                                   >\n                                                      <MapPin size=\"15\" />{\" \"}\n                                                        &nbsp; Find Location\n                                                     </CardLink>\n                                                </CardText>\n                                             </div>\n                                          </CardHeader>\n                                          <CardBody>\n                                             <CardImg\n                                                variant=\"bottom\"\n                                                src={\n                                                   IMG.baseURL +\n                                                   \"/\" +\n                                                   item.avtar\n                                                }\n                                             />\n                                             <hr />\n                                             <div className=\"justify-content-between\">\n                                                <i>Capacity:&nbsp;&nbsp;</i>\n                                                <span className=\"text-success\">\n                                                   {item.capacity}\n                                                </span>\n                                                <br />\n                                                <br />\n                                                <i>Location:&nbsp;&nbsp;</i>\n                                                <span className=\"text-secondary\">\n                                                   {item.location}\n                                                </span>\n                                                <br />\n                                                <br />\n                                                <i>Mobile:&nbsp;&nbsp;</i>\n                                                <span className=\"text-info\">\n                                                   {item.mobile}\n                                                </span>\n                                             </div>\n                                          </CardBody>\n                                       </Card>\n                                    </Col>\n                                 );\n                              })\n                              : \"No such venue found near you!\"}\n                        </Row>\n                     </Col>\n                  </CardBody>\n               </Card>\n            </Col>\n         </Row>\n      );\n   }\n}\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\nconst mapStateToProps = (state) => {\n   return {};\n};\n\nexport default connect(mapStateToProps)(Home);\n","import axios from \"../../configs/axiosConfig\";\r\n\r\n//get All Banquet\r\nexport const getBanquet = () => async (dispatch) => {\r\n   const res = await axios.get(\"/banquet\");\r\n   if (res) {\r\n      dispatch({ type: \"BANQUET\", payload: res.data });\r\n   }\r\n   return res;\r\n};\r\n//get NearBY Banquet\r\nexport const getNearBanquet = (lng, lat) => async (dispatch) => {\r\n   const res = await axios.get(`/location?lng=${lng}&lat=${lat}`);\r\n\r\n   return res;\r\n};\r\n","import React from \"react\"\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    CardText,\r\n    Input,\r\n    CardLink,\r\n    CardImg,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    CardTitle,\r\n\r\n} from \"reactstrap\";\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            banquetId:\r\n                this.props.location &&\r\n                    this.props.location.state &&\r\n                    this.props.location.state.banquetId\r\n                    ? this.props.location.state.banquetId // you will get the edit Id here\r\n                    : \"\",\r\n\r\n        };\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Row>\r\n                <Col md=\"6\" sm=\"12\" className=\"pt-4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>welcome</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h1> hiii</h1>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <h2> hello</h2>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React, { Component } from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { history } from \"./history\";\nimport Menu from \"./navbar/menu\";\nimport \"../src/index.css\";\nimport { connect } from \"react-redux\";\n\n//Home Dashboard\nimport Home from \"./views/Components/UserDashboard/Home\";\n//Menu\nimport Menus from \"./views/Components/Menu\";\n\nclass Routes extends Component {\n   render() {\n      return (\n         <div>\n            <Router history={history}>\n               <Menu />\n               <Switch>\n                  {/* For Dashboard */}\n                  <Route exact path=\"/\" component={Home} />\n                  {/* For Display Menu */}\n                  <Route exact path=\"/menu\" component={Menus} />\n               </Switch>\n            </Router>\n         </div>\n      );\n   }\n}\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\nconst mapStateToProps = (state) => {\n   return {};\n};\nexport default connect(mapStateToProps)(Routes);\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n   return <Routes />;\n}\n\nexport default App;\n","export const initialState = {\n   banquets: [],\n};\n\n//To Store the Actions\nconst global = (state = initialState, action) => {\n   switch (action.type) {\n      case \"BANQUET\":\n         return Object.assign({}, state, { banquets: action.payload });\n      default:\n         return state;\n   }\n};\nexport default global;\n","import globalReducer from \"./global/global\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\n\nconst persistConfig = {\n   key: \"jwt\",\n   storage,\n   whitelist: [\"auth\"],\n};\n\nconst rootReducer = combineReducers({\n   globalReducer: globalReducer,\n});\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createDebounce from \"redux-debounced\";\nimport thunk from \"redux-thunk\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst middlewares = [thunk, createDebounce()];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(\n   rootReducer,\n   {},\n   composeEnhancers(applyMiddleware(...middlewares))\n);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/storeConfig/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <PersistGate persistor={persistor}>\n         <HashRouter>\n            <App />\n         </HashRouter>\n      </PersistGate>\n   </Provider>,\n\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
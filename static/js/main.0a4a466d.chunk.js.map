{"version":3,"sources":["history.js","navbar/menu.js","configs/axiosConfig.js","redux/actions/global.js","configs/imgConfig.js","views/Components/UserDashboard/Home.js","views/Components/Cart.js","views/Components/ExtraItem.js","views/Components/Menu.js","Routes.js","App.js","redux/reducers/global/global.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js"],"names":["history","createHashHistory","Menu","className","to","exact","activeStyle","color","Component","connect","state","withRouter","require","config","axiosInstance","axios","create","baseURL","process","API_URL","saveData","data","dispatch","a","type","payload","REACT_APP_PUBLIC_PATH","Home","props","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocation","alert","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","position","lng","lat","coords","latitude","longitude","get","res","then","setState","updateSearchQuery","val","searchVal","componentDidMount","rowData","longtitude","filteredData","this","map","item","banquetId","filter","banName","toLowerCase","indexOf","Row","Col","sm","Card","CardBody","md","size","offset","style","paddingTop","InputGroup","Input","id","placeholder","onChange","e","target","value","InputGroupAddon","addonType","InputGroupText","length","index","lg","key","body","outline","borderColor","cursor","onClick","push","_id","CardHeader","CardTitle","CardText","CardLink","href","locationLink","CardImg","variant","src","IMG","avtar","capacity","location","mobile","React","Cart","handleInc","i","obj","productId","quantity","price","put","data1","cart","splice","total","reduce","totalitem","handleDec","prevState","prevPrice","handleDel","window","reload","handleRemove","removeItem","addItem1","updateData","total1","tag","Table","bordered","Button","productName","responsive","borderless","ExtraItem","handleItem","abc","extraPrice","addItem","name","itemName","handleClick","handleChild","formData","addExtraItem","search","split","console","log","toggleModal","ItemDetails","comboItem","showLeadModal","toggle","collapse","onEntered","status","onEntering","onExited","onExiting","addToCart","arr","count","globalActions","subTotal","Media","object","image","alt","height","width","description","Collapse","isOpen","productDetails","categoryName","Modal","ModalHeader","ModalBody","globalReducer","Routes","path","component","Menus","App","initialState","banquets","global","action","Object","assign","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","thunk","createDebounce","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a4a466d.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\nexport let history = createHashHistory();\n","import React, { Component, Fragment } from \"react\";\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Menu extends Component {\n   render() {\n      return (\n         <div>\n            <ul className=\"nav nav-tabs bg-blue\">\n               <li className=\"nav-item\">\n                  <NavLink\n                     to=\"/\"\n                     exact\n                     className=\"nav-link\"\n                     activeStyle={{ color: \"red\" }}\n                  >\n                     Dashboard\n                  </NavLink>\n               </li>\n\n            </ul>\n         </div>\n      );\n   }\n}\nconst mapStateToProps = (state) => {\n   return {};\n};\nexport default connect(mapStateToProps)(withRouter(Menu));\n","import axios from \"axios\";\nrequire(\"dotenv\").config();\n\nconst axiosInstance = axios.create({\n   baseURL:\n      process.env.API_URL || \"https://arcane-eyrie-87352.herokuapp.com/api/\",\n});\n\nexport default axiosInstance;\n","import axios from \"../../configs/axiosConfig\";\r\n\r\n//get All Banquet\r\nexport const getBanquet = () => async (dispatch) => {\r\n   const res = await axios.get(\"/banquet\");\r\n   if (res) {\r\n      dispatch({ type: \"BANQUET\", payload: res.data });\r\n   }\r\n   return res;\r\n};\r\n//get NearBY Banquet\r\nexport const getNearBanquet = (lng, lat) => async (dispatch) => {\r\n   const res = await axios.get(`/location?lng=${lng}&lat=${lat}`);\r\n\r\n   return res;\r\n};\r\n//get the all bundles\r\nexport const getBundle = () => async (dispatch) => {\r\n   const res = await axios.get(\"/bundle\");\r\n\r\n   return res;\r\n};\r\n//update Increment Products\r\nexport const getIncProduct = (id, data) => async (dispatch) => {\r\n   const res = await axios.put(`/edit/inc/product/${id}`, data);\r\n\r\n   return res;\r\n};\r\n//update Decrement Products\r\nexport const getDecProduct = (id, data) => async (dispatch) => {\r\n   const res = await axios.put(`/edit/dec/product/${id}`, data);\r\n\r\n   return res;\r\n};\r\n//Save the Product as well as ExtraItem\r\nexport const saveData = (data) => async (dispatch) => {\r\n   //console.log(\"LEADCONTACT\", data);\r\n   dispatch({ type: \"EX_PRODUCT\", payload: data });\r\n   return data;\r\n};\r\n//Remove the product item from localStorage\r\nexport const removeItem = () => async (dispatch) => {\r\n   return dispatch({ type: \"DEL_ITEM\" });\r\n};\r\n//Remove the particular product item from localStorage\r\nexport const removeParticularItem = (data) => async (dispatch) => {\r\n   return dispatch({ type: \"DEL_PAR_ITEM\", payload: data });\r\n};\r\n","require(\"dotenv\").config();\n\nconst axiosInstance = {\n   baseURL:\n      process.env.REACT_APP_PUBLIC_PATH ||\n      \"https://arcane-eyrie-87352.herokuapp.com/upload/\",\n};\n\nexport default axiosInstance;\n","import React from \"react\";\nimport {\n   CardBody,\n   CardHeader,\n   Card,\n   Button,\n   Row,\n   Col,\n   CardText,\n   Input,\n   CardLink,\n   CardImg,\n   Nav,\n   NavItem,\n   NavLink,\n   CardTitle,\n   InputGroup,\n   InputGroupAddon,\n   InputGroupText,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { history } from \"../../../history\";\nimport * as globalActions from \"../../../redux/actions/global\";\nimport IMG from \"../../../configs/imgConfig\";\nimport { MapPin } from \"react-feather\";\n\nclass Home extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         data: [],\n         latitude: \"\",\n         searchVal: \"\",\n         longtitude: \"\",\n         rowData: [],\n      };\n   }\n   /*To get Current Location*/\n   getLocation = () => {\n      if (navigator.geolocation) {\n         navigator.geolocation.getCurrentPosition(\n            this.getCoordinates,\n            this.handleLocation\n         );\n      } else {\n         alert(\"hi\");\n      }\n   };\n   /*Handle the location error*/\n   handleLocation = (error) => {\n      switch (error.code) {\n         case error.PERMISSION_DENIED:\n            alert(\"User denied the request for Geolocation.\");\n            break;\n         case error.POSITION_UNAVAILABLE:\n            alert(\"Location information is unavailable.\");\n            break;\n         case error.TIMEOUT:\n            alert(\"The request to get user location timed out.\");\n            break;\n         case error.UNKNOWN_ERROR:\n            alert(\"An unknown error occurred.\");\n            break;\n         default:\n      }\n   };\n   /*To get current latitude & longtitude*/\n   getCoordinates = (position) => {\n      //70.4645757, 21.5134252\n      const data = position.coords.latitude;\n      const abc = position.coords.longitude;\n\n      this.props\n         .dispatch(globalActions.getNearBanquet(70.4645757, 21.5134252))\n         .then((res) => {\n            let data = res.data;\n            this.setState({ data });\n         });\n   };\n\n   /*For Searching Value*/\n   updateSearchQuery = (val) => {\n      this.setState({\n         searchVal: val,\n      });\n   };\n   /*On load screen to show nearBy location*/\n   componentDidMount = () => {\n      this.props.dispatch(globalActions.getBanquet()).then((res) => {\n         let rowData = res.data;\n         this.setState({ rowData });\n      });\n      this.getLocation();\n   };\n\n   render() {\n      const final =\n         this.state.data &&\n         this.state.data.map((item) => {\n            return item.banquetId;\n         });\n      let filteredData = final.filter((data) => {\n         return (\n            data.banName\n               .toLowerCase()\n               .indexOf(this.state.searchVal.toLowerCase()) !== -1\n         );\n      });\n      return (\n         <Row>\n            <Col sm=\"12\">\n               <Card className=\"pt-1\">\n                  <CardBody>\n                     <Col sm=\"12\">\n                        <Col\n                           sm=\"12\"\n                           md={{ size: 4, offset: 4 }}\n                           style={{ paddingTop: 20 }}\n                        >\n                           <InputGroup>\n                              <Input\n                                 type=\"text\"\n                                 id=\"banquet\"\n                                 placeholder=\"Search Banquet\"\n                                 onChange={(e) =>\n                                    this.updateSearchQuery(e.target.value)\n                                 }\n                                 value={this.state.value}\n                              />\n                              <InputGroupAddon addonType=\"append\">\n                                 <InputGroupText>\n                                    <MapPin size=\"15\" />\n                                 </InputGroupText>\n                              </InputGroupAddon>\n                           </InputGroup>\n                        </Col>\n                        <Row className=\"pt-4\">\n                           {filteredData && filteredData.length > 0\n                              ? filteredData.map((item, index) => {\n                                   return (\n                                      <Col lg=\"4\" sm=\"12\" key={index}>\n                                         <Card\n                                            body\n                                            outline\n                                            style={{\n                                               borderColor: \"#333\",\n                                               cursor: \"pointer\",\n                                            }}\n                                            className=\"mt-4\"\n                                            onClick={() =>\n                                               history.push(\n                                                  `/menu?banquetId=${item._id}`\n                                               )\n                                            }\n                                         >\n                                            <CardHeader className=\"justify-content-between\">\n                                               <div className=\"card-heading\">\n                                                  <CardTitle>\n                                                     <h6>\n                                                        <strong>\n                                                           {item.banName}\n                                                        </strong>\n                                                     </h6>\n                                                  </CardTitle>\n                                                  <CardText>\n                                                     <CardLink\n                                                        href={item.locationLink}\n                                                     >\n                                                        <MapPin size=\"15\" />{\" \"}\n                                                        &nbsp; Find Location\n                                                     </CardLink>\n                                                  </CardText>\n                                               </div>\n                                            </CardHeader>\n                                            <CardBody>\n                                               <CardImg\n                                                  variant=\"bottom\"\n                                                  src={\n                                                     IMG.baseURL +\n                                                     \"/\" +\n                                                     item.avtar\n                                                  }\n                                               />\n                                               <hr />\n                                               <div className=\"justify-content-between\">\n                                                  <i>Capacity:&nbsp;&nbsp;</i>\n                                                  <span className=\"text-success\">\n                                                     {item.capacity}\n                                                  </span>\n                                                  <br />\n                                                  <br />\n                                                  <i>Location:&nbsp;&nbsp;</i>\n                                                  <span className=\"text-secondary\">\n                                                     {item.location}\n                                                  </span>\n                                                  <br />\n                                                  <br />\n                                                  <i>Mobile:&nbsp;&nbsp;</i>\n                                                  <span className=\"text-info\">\n                                                     {item.mobile}\n                                                  </span>\n                                               </div>\n                                            </CardBody>\n                                         </Card>\n                                      </Col>\n                                   );\n                                })\n                              : \"No such venue found near you!\"}\n                        </Row>\n                     </Col>\n                  </CardBody>\n               </Card>\n            </Col>\n         </Row>\n      );\n   }\n}\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\nconst mapStateToProps = (state) => {\n   return {};\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\r\nimport {\r\n   CardBody,\r\n   CardHeader,\r\n   Card,\r\n   Button,\r\n   Row,\r\n   Col,\r\n   Table,\r\n   CardTitle,\r\n} from \"reactstrap\";\r\nimport { Minus, Plus, Trash } from \"react-feather\";\r\nimport * as globalActions from \"../../redux/actions/global\";\r\n\r\nclass Cart extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         cart: this.props.addItem1,\r\n         prevPrice: 0,\r\n         price: 0,\r\n         total: 0,\r\n         updateData: [],\r\n      };\r\n   }\r\n   /*Handle the Increment Quantity*/\r\n   handleInc = (i, index) => {\r\n      let obj = {\r\n         productId: i._id,\r\n         quantity: i.quantity,\r\n         price: i.price,\r\n      };\r\n      this.props\r\n         .dispatch(globalActions.getIncProduct(i._id, obj))\r\n         .then((res) => {\r\n            let data1 = res.data;\r\n            this.state.cart.map((item, index) => {\r\n               if (item._id === data1._id) {\r\n                  this.state.cart.splice(index, 1, data1);\r\n                  let cart = this.state.cart;\r\n                  let total = cart.reduce(\r\n                     (totalitem, item) => +totalitem + +item.price,\r\n                     0\r\n                  );\r\n                  this.setState({ total });\r\n                  this.setState({ cart });\r\n               }\r\n            });\r\n         });\r\n   };\r\n   /*Handle the Decrement Quantity*/\r\n   handleDec = (item) => {\r\n      this.setState(\r\n         (prevState) => {\r\n            return {\r\n               price: item.price,\r\n               prevPrice: prevState.price,\r\n            };\r\n         },\r\n         () => {\r\n            let obj = {\r\n               productId: item._id,\r\n               quantity: item.quantity,\r\n               price: this.state.price,\r\n            };\r\n            this.props\r\n               .dispatch(globalActions.getDecProduct(item._id, obj))\r\n               .then((res) => {\r\n                  let data1 = res.data;\r\n                  data1.price = this.state.prevPrice;\r\n\r\n                  this.state.cart.map((item, index) => {\r\n                     if (item._id === data1._id) {\r\n                        this.state.cart.splice(index, 1, data1);\r\n                        let cart = this.state.cart;\r\n                        let total = cart.reduce(\r\n                           (totalitem, item) => +totalitem + +item.price,\r\n                           0\r\n                        );\r\n                        this.setState({ total });\r\n                        this.setState({ cart });\r\n                     }\r\n                  });\r\n               });\r\n         }\r\n      );\r\n   };\r\n   /*Remove the particular Item*/\r\n   handleDel = (item) => {\r\n      this.props.dispatch(globalActions.removeParticularItem(item));\r\n      window.location.reload();\r\n   };\r\n   /*Remove the all the item*/\r\n   handleRemove = () => {\r\n      this.props.removeItem();\r\n   };\r\n   render() {\r\n      let price = this.state.cart;\r\n      let total1 =\r\n         price &&\r\n         price.reduce((totalitem, item) => +totalitem + +item.price, 0);\r\n      return (\r\n         <Card>\r\n            <CardHeader>\r\n               <CardTitle tag=\"h5\">Orders</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n               <Table bordered>\r\n                  <thead>\r\n                     <tr>\r\n                        <th>Remove</th>\r\n                        <th>Product Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Add</th>\r\n                     </tr>\r\n                  </thead>\r\n                  {this.state.cart.length > 0\r\n                     ? this.state.cart &&\r\n                       this.state.cart.map((i, index) => {\r\n                          return (\r\n                             <tbody key={index}>\r\n                                <tr>\r\n                                   <td>\r\n                                      <div className=\"d-flex justify-content-start\">\r\n                                         <Button\r\n                                            className=\"mr-1\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            onClick={(e) => this.handleDel(i)}\r\n                                         >\r\n                                            <Trash size={15} />\r\n                                         </Button>\r\n                                      </div>\r\n                                   </td>\r\n                                   <td>{i.productName}</td>\r\n                                   <td> {i.price} &nbsp; INR</td>\r\n                                   <td> {i.quantity}</td>\r\n                                   <td>\r\n                                      <div className=\"d-flex justify-content-between\">\r\n                                         <Button\r\n                                            className=\"mr-1\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            onClick={() => this.handleDec(i)}\r\n                                         >\r\n                                            <Minus size={15} />\r\n                                         </Button>\r\n                                         <Button\r\n                                            className=\"mr-1\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            onClick={() =>\r\n                                               this.handleInc(i, index)\r\n                                            }\r\n                                         >\r\n                                            <Plus size={15} />\r\n                                         </Button>\r\n                                      </div>\r\n                                   </td>\r\n                                </tr>\r\n                             </tbody>\r\n                          );\r\n                       })\r\n                     : \"No Products Found\"}\r\n               </Table>\r\n            </CardBody>\r\n            <div className=\"invoice-total-table\">\r\n               <Row>\r\n                  <Col sm=\"12\">\r\n                     <Table responsive borderless>\r\n                        <tbody>\r\n                           <tr>\r\n                              <th className=\"text-right\">Total</th>\r\n                           </tr>\r\n                           <tr>\r\n                              <td className=\"text-right\">\r\n                                 {\" \"}\r\n                                 {this.state.total ? this.state.total : total1}\r\n                              </td>\r\n                           </tr>\r\n\r\n                           <tr>\r\n                              <td>\r\n                                 <div className=\"d-flex justify-content-between\">\r\n                                    <Button\r\n                                       className=\"mr-1\"\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       onClick={() => this.handleRemove()}\r\n                                    >\r\n                                       Remove All\r\n                                    </Button>\r\n                                    <Button\r\n                                       className=\"mr-1\"\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       //onClick={() => this.handleRemove()}\r\n                                    >\r\n                                       Place Order\r\n                                    </Button>\r\n                                 </div>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                  </Col>\r\n               </Row>\r\n            </div>\r\n         </Card>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport {\r\n   Card,\r\n   Col,\r\n   Row,\r\n   Button,\r\n   CardHeader,\r\n   CardTitle,\r\n   CardBody,\r\n   Form,\r\n   FormGroup,\r\n   Table,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ExtraItem extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         formData: {},\r\n         extraPrice: 0,\r\n         total: 0,\r\n         name: \"\",\r\n         addItem: this.props.addItem,\r\n      };\r\n   }\r\n   /*Handle the Extra Items*/\r\n   handleItem = (abc) => {\r\n      this.setState({ extraPrice: abc.price }, () => {\r\n         const total = +this.state.addItem.price + +this.state.extraPrice;\r\n\r\n         this.setState({ total });\r\n      });\r\n      let name = abc.itemName;\r\n      this.setState({ name });\r\n   };\r\n   /*Handle the AddToCart */\r\n   handleClick = () => {\r\n      let price = this.state.total\r\n         ? this.state.total\r\n         : this.state.addItem.price;\r\n      let name =\r\n         this.state.addItem.productName + \" Extra Item: \" + this.state.name;\r\n\r\n      let quantity = this.state.addItem.quantity;\r\n      let id = this.state.addItem._id;\r\n      this.props.handleChild(price, name, quantity, id);\r\n   };\r\n\r\n   render() {\r\n      const { addItem } = this.state;\r\n      const { addExtraItem } = this.props;\r\n      return (\r\n         <Row>\r\n            <Col sm=\"12\">\r\n               <Card>\r\n                  <CardHeader>Combo Items</CardHeader>\r\n                  <CardBody className=\"pt-2\">\r\n                     <Col sm=\"12\">\r\n                        <Table size=\"md\" responsive bordered>\r\n                           <thead>\r\n                              <tr>\r\n                                 <th>Product Name</th>\r\n                                 <th>Price</th>\r\n                                 <th>Quantity</th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                              <tr>\r\n                                 <td>{addItem.productName}</td>\r\n                                 <td>\r\n                                    {addItem.price}\r\n                                    &nbsp; INR\r\n                                 </td>\r\n                                 <td>{addItem.quantity}</td>\r\n                              </tr>\r\n                           </tbody>\r\n\r\n                           <thead className=\"pt-4\">\r\n                              <tr>\r\n                                 <th>Item Name</th>\r\n                                 <th>Price</th>\r\n                                 <th>Pick One</th>\r\n                              </tr>\r\n                           </thead>\r\n                           {addExtraItem &&\r\n                              addExtraItem.map((item, index) => {\r\n                                 return (\r\n                                    <tbody key={index}>\r\n                                       <tr>\r\n                                          <td>{item.itemName}</td>\r\n                                          <td>\r\n                                             {item.price}\r\n                                             &nbsp; INR\r\n                                          </td>\r\n                                          <td>\r\n                                             <Input\r\n                                                className=\"ml-3\"\r\n                                                type=\"radio\"\r\n                                                name=\"radio\"\r\n                                                onChange={() =>\r\n                                                   this.handleItem(item)\r\n                                                }\r\n                                             />\r\n                                          </td>\r\n                                       </tr>\r\n                                    </tbody>\r\n                                 );\r\n                              })}\r\n                        </Table>\r\n                     </Col>\r\n                  </CardBody>\r\n                  <div className=\"invoice-total-table\">\r\n                     <Row>\r\n                        <Col sm=\"12\">\r\n                           <Table responsive borderless>\r\n                              <tbody>\r\n                                 <tr>\r\n                                    <th className=\"text-right\">Total</th>\r\n                                 </tr>\r\n                                 <tr>\r\n                                    <td>\r\n                                       <div className=\"d-flex justify-content-between\">\r\n                                          <Button\r\n                                             className=\"mr-1\"\r\n                                             color=\"primary\"\r\n                                             type=\"submit\"\r\n                                             onClick={() => this.handleClick()}\r\n                                          >\r\n                                             Add To Cart\r\n                                          </Button>\r\n\r\n                                          {this.state.total\r\n                                             ? this.state.total\r\n                                             : this.state.addItem.price}\r\n                                       </div>\r\n                                    </td>\r\n                                 </tr>\r\n                              </tbody>\r\n                           </Table>\r\n                        </Col>\r\n                     </Row>\r\n                  </div>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\r\nconst mapStateToProps = (state) => {\r\n   return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(ExtraItem);\r\n","import React from \"react\";\r\nimport {\r\n   CardBody,\r\n   CardHeader,\r\n   Card,\r\n   Button,\r\n   Row,\r\n   Col,\r\n   Table,\r\n   Modal,\r\n   ModalHeader,\r\n   ModalBody,\r\n   Media,\r\n   Collapse,\r\n   CardTitle,\r\n} from \"reactstrap\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport Cart from \"./Cart\";\r\nimport ExtraItem from \"./ExtraItem\";\r\nimport { connect } from \"react-redux\";\r\nimport * as IMG from \"../../configs/imgConfig\";\r\nimport * as globalActions from \"../../redux/actions/global\";\r\n\r\nclass Menu extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         collapse: false,\r\n         status: \"Opened\",\r\n         rowData: [],\r\n         subTotal: 0,\r\n         comboItem: [],\r\n         total: 0,\r\n         arr: this.props.data1,\r\n         data: [],\r\n         item: [],\r\n         showLeadModal: false,\r\n      };\r\n   }\r\n\r\n   /*On load screen to show products*/\r\n   componentDidMount = () => {\r\n      const search = this.props.location.search;\r\n      const banquetId = search.split(\"=\")[1];\r\n\r\n      this.props.dispatch(globalActions.getBundle()).then((res) => {\r\n         let rowData = res.data.filter((i) => {\r\n            if (i.banquetId === banquetId) {\r\n               return i;\r\n            } else {\r\n               console.log(\"sorry\");\r\n            }\r\n         });\r\n         this.setState({ rowData });\r\n      });\r\n   };\r\n\r\n   /*Open the Pop-Up Box for combo*/\r\n   toggleModal = (item) => {\r\n      this.state.rowData &&\r\n         this.state.rowData.map((item) =>\r\n            this.setState({ item: item.ItemDetails })\r\n         );\r\n\r\n      this.setState({ comboItem: item });\r\n      this.setState((prevState) => ({\r\n         showLeadModal: !prevState.showLeadModal,\r\n      }));\r\n   };\r\n   toggle = () => {\r\n      this.setState((state) => ({ collapse: !state.collapse }));\r\n   };\r\n   onEntered = () => {\r\n      this.setState({ status: \"Opened\" });\r\n   };\r\n   onEntering = () => {\r\n      this.setState({ status: \"Opening...\" });\r\n   };\r\n   onExited = () => {\r\n      this.setState({ status: \"Closed\" });\r\n   };\r\n\r\n   onExiting = () => {\r\n      this.setState({ status: \"Closing...\" });\r\n   };\r\n   /* Handle the AddToCart Component*/\r\n   addToCart = (data) => {\r\n      let arr = this.state.arr;\r\n      arr.push({\r\n         ...data,\r\n         count: 1,\r\n      });\r\n\r\n      this.props.dispatch(globalActions.saveData(arr));\r\n\r\n      this.setState({ arr });\r\n   };\r\n   /*Remove from Cart*/\r\n   handleRemove = () => {\r\n      this.props.dispatch(globalActions.removeItem());\r\n      window.location.reload();\r\n   };\r\n\r\n   /*handle the data from Child Component*/\r\n   handleChild = (price, name, quantity, id) => {\r\n      let cart = {\r\n         price: price,\r\n         productName: name,\r\n         quantity: quantity,\r\n         _id: id,\r\n      };\r\n      let arr = this.state.arr;\r\n      arr.push({\r\n         ...cart,\r\n         count: 1,\r\n      });\r\n      this.props.dispatch(globalActions.saveData(arr));\r\n      this.setState({ arr });\r\n      this.toggleModal();\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Row>\r\n            <Col md=\"6\" sm=\"12\">\r\n               {this.state.rowData &&\r\n                  this.state.rowData.map((i, index) => {\r\n                     return (\r\n                        <Card\r\n                           style={{\r\n                              cursor: \"pointer\",\r\n                           }}\r\n                           key={index}\r\n                        >\r\n                           <CardHeader>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                 <CardTitle tag=\"h2\">{i.banName}</CardTitle>\r\n                                 <ChevronDown\r\n                                    className=\"collapse-icon\"\r\n                                    size={20}\r\n                                    onClick={this.toggle}\r\n                                 />\r\n                              </div>\r\n                              <Media className=\"d-sm-flex d-block\">\r\n                                 <Media className=\"mt-md-1 mt-0\">\r\n                                    <Media\r\n                                       className=\"rounded mr-2\"\r\n                                       object\r\n                                       src={IMG.default.baseURL + \"\" + i.image}\r\n                                       alt=\"Generic placeholder image\"\r\n                                       height=\"112\"\r\n                                       width=\"112\"\r\n                                    />\r\n                                 </Media>\r\n                                 <Media body className=\"pt-3\">\r\n                                    <p>\r\n                                       <i>{i.description}</i>\r\n                                    </p>\r\n                                 </Media>\r\n                              </Media>\r\n                           </CardHeader>\r\n                           <Collapse\r\n                              isOpen={this.state.collapse}\r\n                              onExited={this.onExited}\r\n                              onEntered={this.onEntered}\r\n                              onExiting={this.onExiting}\r\n                              onEntering={this.onEntering}\r\n                           >\r\n                              {/* Paneer Items */}\r\n                              <Card>\r\n                                 <CardHeader>\r\n                                    <CardTitle tag=\"h5\">Paneer Items</CardTitle>\r\n                                 </CardHeader>\r\n                                 <CardBody>\r\n                                    <Table size=\"md\" responsive bordered>\r\n                                       <thead>\r\n                                          <tr>\r\n                                             <th>Product Name</th>\r\n                                             <th>Price</th>\r\n                                             <th>Quantity</th>\r\n                                             <th>Add To Cart</th>\r\n                                          </tr>\r\n                                       </thead>\r\n                                       {i.productDetails &&\r\n                                          i.productDetails.map(\r\n                                             (item, index) => {\r\n                                                if (\r\n                                                   item.categoryName ==\r\n                                                   \"Paneer Items\"\r\n                                                ) {\r\n                                                   return (\r\n                                                      <tbody key={index}>\r\n                                                         <tr>\r\n                                                            <td>\r\n                                                               {\r\n                                                                  item.productName\r\n                                                               }\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {item.price}\r\n                                                               &nbsp; INR\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {item.quantity}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               <Button\r\n                                                                  className=\"mr-1\"\r\n                                                                  color=\"primary\"\r\n                                                                  type=\"submit\"\r\n                                                                  onClick={() =>\r\n                                                                     this.addToCart(\r\n                                                                        item\r\n                                                                     )\r\n                                                                  }\r\n                                                               >\r\n                                                                  Add\r\n                                                               </Button>\r\n                                                            </td>\r\n                                                         </tr>\r\n                                                      </tbody>\r\n                                                   );\r\n                                                }\r\n                                             }\r\n                                          )}\r\n                                    </Table>\r\n                                 </CardBody>\r\n                              </Card>\r\n                              {/* Veg Items */}\r\n                              <Card>\r\n                                 <CardHeader>\r\n                                    <CardTitle tag=\"h5\">Veg Items</CardTitle>\r\n                                 </CardHeader>\r\n                                 <CardBody>\r\n                                    <Table size=\"md\" responsive bordered>\r\n                                       <thead>\r\n                                          <tr>\r\n                                             <th>Product Name</th>\r\n                                             <th>Price</th>\r\n                                             <th>Quantity</th>\r\n                                             <th>Add To Cart</th>\r\n                                          </tr>\r\n                                       </thead>\r\n                                       {i.productDetails &&\r\n                                          i.productDetails.map(\r\n                                             (item, index) => {\r\n                                                if (\r\n                                                   item.categoryName ==\r\n                                                   \"Veg Items\"\r\n                                                ) {\r\n                                                   return (\r\n                                                      <tbody key={index}>\r\n                                                         <tr>\r\n                                                            <td>\r\n                                                               {\r\n                                                                  item.productName\r\n                                                               }\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {item.price}\r\n                                                               &nbsp; INR\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {item.quantity}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               <Button\r\n                                                                  className=\"mr-1\"\r\n                                                                  color=\"primary\"\r\n                                                                  type=\"submit\"\r\n                                                                  onClick={() =>\r\n                                                                     this.addToCart(\r\n                                                                        item\r\n                                                                     )\r\n                                                                  }\r\n                                                               >\r\n                                                                  Add\r\n                                                               </Button>\r\n                                                            </td>\r\n                                                         </tr>\r\n                                                      </tbody>\r\n                                                   );\r\n                                                }\r\n                                             }\r\n                                          )}\r\n                                    </Table>\r\n                                 </CardBody>\r\n                              </Card>\r\n                              {/* Combo Items */}\r\n                              <Card>\r\n                                 <CardHeader>\r\n                                    <CardTitle tag=\"h5\">Combo Items</CardTitle>\r\n                                 </CardHeader>\r\n                                 <CardBody>\r\n                                    <Table size=\"md\" responsive bordered>\r\n                                       <thead>\r\n                                          <tr>\r\n                                             <th>Product Name</th>\r\n                                             <th>Price</th>\r\n                                             <th>Quantity</th>\r\n                                             <th>Add To Cart</th>\r\n                                          </tr>\r\n                                       </thead>\r\n                                       {i.productDetails &&\r\n                                          i.productDetails.map(\r\n                                             (item, index) => {\r\n                                                if (\r\n                                                   item.categoryName ==\r\n                                                   \"Combo Items\"\r\n                                                ) {\r\n                                                   return (\r\n                                                      <tbody key={index}>\r\n                                                         <tr>\r\n                                                            <td>\r\n                                                               {\r\n                                                                  item.productName\r\n                                                               }\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {item.price}\r\n                                                               &nbsp; INR\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {item.quantity}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                               <Button\r\n                                                                  className=\"mr-1\"\r\n                                                                  color=\"primary\"\r\n                                                                  type=\"submit\"\r\n                                                                  onClick={() =>\r\n                                                                     this.toggleModal(\r\n                                                                        item\r\n                                                                     )\r\n                                                                  }\r\n                                                               >\r\n                                                                  Add\r\n                                                               </Button>\r\n                                                            </td>\r\n                                                         </tr>\r\n                                                      </tbody>\r\n                                                   );\r\n                                                }\r\n                                             }\r\n                                          )}\r\n                                    </Table>\r\n                                 </CardBody>\r\n                              </Card>\r\n                           </Collapse>\r\n                           {/* Open the Pop-Up Model */}\r\n                           <Modal\r\n                              isOpen={this.state.showLeadModal}\r\n                              toggle={this.toggleModal}\r\n                              className=\"modal-dialog-centered modal-lg\"\r\n                           >\r\n                              <ModalHeader\r\n                                 toggle={this.toggleModal}\r\n                                 className=\"bg-primary\"\r\n                              >\r\n                                 Choose Extra Items\r\n                              </ModalHeader>\r\n                              <ModalBody>\r\n                                 <ExtraItem\r\n                                    toggleModal={this.toggleModal}\r\n                                    addItem={this.state.comboItem}\r\n                                    addExtraItem={this.state.item}\r\n                                    handleChild={this.handleChild}\r\n                                 />\r\n                              </ModalBody>\r\n                           </Modal>\r\n                        </Card>\r\n                     );\r\n                  })}\r\n            </Col>\r\n\r\n            <Col md=\"6\" sm=\"12\">\r\n               <Cart\r\n                  addItem1={this.state.arr}\r\n                  dispatch={this.props.dispatch}\r\n                  removeItem={this.handleRemove}\r\n               />\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      data1: state.globalReducer.data,\r\n   };\r\n};\r\nexport default connect(mapStateToProps)(Menu);\r\n","import React, { Component } from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { history } from \"./history\";\nimport Menu from \"./navbar/menu\";\nimport \"../src/index.css\";\nimport { connect } from \"react-redux\";\n\n//Home Dashboard\nimport Home from \"./views/Components/UserDashboard/Home\";\n//Menu\nimport Menus from \"./views/Components/Menu\";\n\nclass Routes extends Component {\n   render() {\n      return (\n         <div>\n            <Router history={history}>\n               <Menu />\n               <Switch>\n                  {/* For Dashboard */}\n                  <Route exact path=\"/\" component={Home} />\n                  {/* For Display Menu */}\n                  <Route exact path=\"/menu\" component={Menus} />\n               </Switch>\n            </Router>\n         </div>\n      );\n   }\n}\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\nconst mapStateToProps = (state) => {\n   return {};\n};\nexport default connect(mapStateToProps)(Routes);\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n   return <Routes />;\n}\n\nexport default App;\n","import { act } from \"react-dom/test-utils\";\n\nexport const initialState = {\n   banquets: [],\n   data: [],\n};\n\n//To Store the Actions\nconst global = (state = initialState, action) => {\n   switch (action.type) {\n      case \"BANQUET\":\n         return Object.assign({}, state, { banquets: action.payload });\n      case \"EX_PRODUCT\":\n         return Object.assign({}, state, { data: action.payload });\n      case \"DEL_ITEM\":\n         return { data: [] };\n      case \"DEL_PAR_ITEM\":\n         return {\n            data: [...state.data.filter((item) => item !== action.payload)],\n         };\n      default:\n         return state;\n   }\n};\nexport default global;\n","import globalReducer from \"./global/global\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\n\nconst persistConfig = {\n   key: \"jwt\",\n   storage,\n   whitelist: [\"globalReducer\"],\n};\n\nconst rootReducer = combineReducers({\n   globalReducer: globalReducer,\n});\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createDebounce from \"redux-debounced\";\nimport thunk from \"redux-thunk\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst middlewares = [thunk, createDebounce()];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(\n   rootReducer,\n   {},\n   composeEnhancers(applyMiddleware(...middlewares))\n);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/storeConfig/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <PersistGate persistor={persistor}>\n         <HashRouter>\n            <App />\n         </HashRouter>\n      </PersistGate>\n   </Provider>,\n\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}